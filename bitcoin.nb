(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    233747,       4692]
NotebookOptionsPosition[    230021,       4626]
NotebookOutlinePosition[    230394,       4642]
CellTagsIndexPosition[    230351,       4639]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://coinmarketcap.com/currencies/ethereum/\>\"", ",", 
     "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748044797723985*^9, 3.7480448076785545`*^9}, {
   3.7480468098020697`*^9, 3.7480468305692573`*^9}, {3.7480468642801857`*^9, 
   3.7480468749687967`*^9}, {3.748046923558576*^9, 3.7480469526662407`*^9}, 
   3.7480486904206343`*^9, 3.748048911774295*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"b6f65e15-2f9c-4a1b-a92e-b22010ed8944"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748047297194947*^9, 3.7480473039163313`*^9}, {
  3.748047357560399*^9, 3.7480475131512985`*^9}, {3.7480483062546616`*^9, 
  3.7480483195784235`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"ed30a3dc-df4b-4068-82fa-b2253ded078d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7480490302000685`*^9, 3.748049030470084*^9}, 
   3.7480497723535175`*^9},ExpressionUUID->"5b33e5de-d353-4942-bf97-\
2b836ef6533a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"x1", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"\"\<ETH/USD\>\"", "|", "\"\<ETH/USDT\>\""}], ",", "__"}], 
     "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7480483885343676`*^9, 3.748048409922591*^9}, {
  3.748048454526142*^9, 3.748048566399541*^9}, {3.7480489704536514`*^9, 
  3.748048976002969*^9}, {3.7480490366204357`*^9, 3.7480490423227625`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"d744c878-725b-422d-8dd8-7c53dcb3e39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"date", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"First", "@", 
     RowBox[{"DateObject", "[", "]"}]}], ")"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "4"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.748051029509423*^9, 3.7480511351374645`*^9}, {
  3.7480511922337303`*^9, 3.7480512138489666`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"87c26d06-28b4-49e5-b540-6c88f769a579"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2018", ",", "10", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.748051194647868*^9, 3.7480512151230392`*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"9d402791-0a2e-4ee2-bd4b-021a6ba55fec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"StringLength", "/@", 
   RowBox[{"(", 
    RowBox[{"ToString", "/@", "date"}], ")"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.748051216965145*^9, 3.7480513696978807`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"0e45fc1d-5644-4a99-9061-10f90ec87a9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7480513333788033`*^9, 3.748051370256912*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"bba70c8e-7506-4104-a676-3d77e0b643a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2018", ",", "10", ",", "9"}], "}"}]], "Input",
 CellChangeTimes->{{3.7480511794249973`*^9, 
  3.7480511853693376`*^9}},ExpressionUUID->"41d85799-ffc5-4a3c-8c2e-\
d4066666f6c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://coinmarketcap.com/currencies/ethereum/historical-data/?start=\
20180901&end=20181009\>\"", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748049782561102*^9, 3.748049796728912*^9}, {
  3.7480498289617558`*^9, 3.748049842825548*^9}, {3.748049890188257*^9, 
  3.7480499142996364`*^9}, {3.7480509885980825`*^9, 3.7480510031139135`*^9}, {
  3.748051423309947*^9, 3.748051429986329*^9}, {3.7480520757562647`*^9, 
  3.748052076626314*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"d76ee4a0-fbd5-40ee-910e-0f35ccf84d3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"da", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "1"}], "]"}], "]"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ")"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7480501149171114`*^9, 3.748050152070236*^9}, {
  3.7480502177959957`*^9, 3.7480504025955653`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"b31f40de-4cdd-4b14-8961-8e9009b26be3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"da", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7480519801217947`*^9, 3.7480519908234067`*^9}, {
  3.7480528330545797`*^9, 3.748052833778621*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"7196cb2f-b2f7-43f6-94c2-fee02199d8e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"Date\"\>", "\<\"Open*\"\>", "\<\"High\"\>", "\<\"Low\"\>", \
"\<\"Close**\"\>", "\<\"Volume\"\>", "\<\"Market Cap\"\>"},
     {"\<\"Oct 08, 2018\"\>", "226.51`", "230.76`", "224.56`", 
      "229.25`", "\<\"1,470,740,000\"\>", "\<\"23,201,746,333\"\>"},
     {"\<\"Oct 07, 2018\"\>", "225.44`", "226.37`", "223.`", 
      "226.12`", "\<\"1,470,480,000\"\>", "\<\"23,087,109,194\"\>"},
     {"\<\"Oct 06, 2018\"\>", "227.55`", "227.93`", "224.25`", 
      "225.12`", "\<\"1,505,070,000\"\>", "\<\"23,299,225,467\"\>"},
     {"\<\"Oct 05, 2018\"\>", "222.27`", "228.32`", "220.96`", 
      "227.6`", "\<\"1,547,330,000\"\>", "\<\"22,753,560,914\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.748051985232087*^9, 3.7480519912924337`*^9}, 
   3.7480520831816893`*^9, 3.748052132998539*^9, 3.748052834339653*^9},
 CellLabel->
  "Out[171]//MatrixForm=",ExpressionUUID->"f24834fe-c39e-42ab-af9c-\
3bdfc36ec8aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"traindata", "=", 
   RowBox[{"da", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7480508945987062`*^9, 3.7480508992379713`*^9}, {
  3.7480518521014724`*^9, 3.7480518688414297`*^9}, {3.7480519043724623`*^9, 
  3.7480519778266635`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"54e9d7ec-4cbd-42c7-89b2-acfb58bfb496"],

Cell[BoxData[
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"traindata", "[", 
    RowBox[{"[", "All", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7480520382291183`*^9, 3.748052127865245*^9}, {
  3.748052682388962*^9, 3.748052683347017*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"d887041e-99bf-4671-b7f8-4d32acfe53ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"traindata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7480519762205715`*^9, {3.748052015578823*^9, 3.7480520507128325`*^9}, {
   3.7480521405449705`*^9, 3.7480521464423075`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"8841d0ca-0c35-4e56-982c-4bbe4d2ec30d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "in", "]"}], "\[Rule]", 
     RowBox[{"Most", "[", "out", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7480521488544455`*^9, 3.7480522142091837`*^9}, {
  3.748052871908802*^9, 3.7480528789142027`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"34c450f4-e5a2-4535-a0af-267b39aee833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "3"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.748052698894906*^9, 3.7480527053662767`*^9}, 
   3.748052739590234*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"bd3ee033-fde1-46c0-b10c-50b48dee7972"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "225.44`", ",", "226.37`", ",", "223.`", ",", "226.12`", 
          ",", "\<\"1,470,480,000\"\>", ",", "\<\"23,087,109,194\"\>"}], 
         "}"}], "\[Rule]", "229.25`"}]},
      {
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "227.55`", ",", "227.93`", ",", "224.25`", ",", "225.12`", 
          ",", "\<\"1,505,070,000\"\>", ",", "\<\"23,299,225,467\"\>"}], 
         "}"}], "\[Rule]", "226.12`"}]},
      {
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "222.27`", ",", "228.32`", ",", "220.96`", ",", "227.6`", 
          ",", "\<\"1,547,330,000\"\>", ",", "\<\"22,753,560,914\"\>"}], 
         "}"}], "\[Rule]", "225.12`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7480527058713055`*^9, 3.7480527400892625`*^9, 
  3.748052889162789*^9},
 CellLabel->
  "Out[176]//MatrixForm=",ExpressionUUID->"6b174018-0b32-4871-a699-\
fa4d2e9d517a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{"RandomSample", "@", "train"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748052216016287*^9, 3.7480522248307915`*^9}, {
  3.7480522590517483`*^9, 3.7480522748886547`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"8dfda203-7760-4fb7-b0d0-106d1262c82e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"train", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7480523122867937`*^9, 3.7480523191591864`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"abb07c69-91ad-4873-aff8-b89896669a17"],

Cell[BoxData["37"], "Output",
 CellChangeTimes->{3.7480523195432086`*^9, 3.7480529224226913`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"0b99cd3a-1871-4771-a783-2aa05b91e71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"train", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "11"}]}], "]"}], "]"}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"train", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "10"}], ";;"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GradientBoostedTrees\>\"", ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "100"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7480522802709627`*^9, 3.7480523582344217`*^9}, {
  3.7480524119084916`*^9, 3.7480524190428996`*^9}, {3.748053027405696*^9, 
  3.7480530714192133`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"9652d76c-d651-49b3-b4eb-543321b597e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Text\"", 
                    ",", "\"Text\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Text", "Text"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Text\"", 
                    ",", "\"Text\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Text", "Text"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["27", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 27, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"], "f3" -> 
           Association["Type" -> "Numerical"], "f4" -> 
           Association["Type" -> "Numerical"], "f5" -> 
           Association["Type" -> "Text"], "f6" -> 
           Association["Type" -> "Text"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Text", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 6]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", "Text", 
                  "Text"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> False, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "(f5f6(f1f2f3f4))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoB2IRMJhiP0oPLtpNPLbkomv7KD1KD0maAQw+4KQBpUxU
Zg==
              "], "Type" -> "NumericalVector"]], "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
               Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Version" -> {11.3, 0}, "ID" -> 680366584]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1], "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Output" -> 
             Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1], "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Fill" -> "", "Output" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Type" -> "Text", "Version" -> {11.3, 0}, "ID" -> 
                 1448021894]], 
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Fill" -> "", "Output" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Type" -> "Text", "Version" -> {11.3, 0}, "ID" -> 
                 812935457]], 
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                 Association[
                  "(f1f2f3f4)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 4]], 
                 "Imputer" -> (DimensionReducerFunction[
                   Association[
                   "ExampleNumber" -> 27, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {225.86333333333334`, 231.4444444444444, 
                    215.95111111111103`, 223.70222222222225`}, "Method" -> 
                    "Naive", "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {225.86333333333334`, 231.4444444444444, 
                    215.95111111111103`, 223.70222222222225`}, 
                    "StandardDeviation" -> {27.035623687056646`, 
                    24.893153206116875`, 25.65190085128149, 
                    23.183198950538056`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                    MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    "Model" -> 
                    Association[
                    "Matrix" -> {{-0.49684805468437715`, \
-0.5687346886944981}, {-0.502316605275202, -0.4099696702761857}, \
{-0.5054099416198568, 0.3678412874922956}, {-0.49535929337498064`, 
                    0.61086701543398}}, "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {225.86333333333334`, 231.4444444444444, 
                    215.95111111111103`, 223.70222222222225`}, 
                    "StandardDeviation" -> {27.035623687056646`, 
                    24.893153206116875`, 25.65190085128149, 
                    23.183198950538056`}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 2, "Method" -> "Linear"], 
                    "PerformanceGoal" -> Automatic, "Invertibility" -> 
                    "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.02662055801461569, 
                    "MaxTrainingMemory" -> 41600, "DataMemory" -> 976, 
                    "FunctionMemory" -> 15384, "LanguageVersion" -> {11.3, 0},
                     "Date" -> 
                    DateObject[{
                    2018, 10, 9, 8, 51, 12.6722851`8.855429891505503}, 
                    "Instant", "Gregorian", 3.], "ProcessorCount" -> 2, 
                    "ProcessorType" -> "x86", "OperatingSystem" -> "Windows", 
                    "SystemWordLength" -> 32, "Evaluations" -> {}]]][#, 
                   "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                 "Method" -> "DimensionReduction", "VectorLength" -> 4, 
                 "Output" -> 
                 Association[
                  "(f1f2f3f4)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 4]], 
                 "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                 591376471]]}, "Invertibility" -> "Perfect", "Missing" -> 
             "Imputed"]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Mean" -> {225.86333333333334`, 231.4444444444444, 
              215.95111111111103`, 223.70222222222225`}, 
             "StandardDeviation" -> {27.035623687056646`, 24.893153206116875`,
               25.65190085128149, 23.183198950538056`}, "Output" -> 
             Association[
              "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Version" -> {11.3, 0}, "ID" -> 1762712431]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
             Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1]], "Processors" -> {
               MachineLearning`MLProcessor["ToLowerCase", 
                Association[
                "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                 "Input" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Version" -> {11.3, 0}, "ID" -> 685022405, "Output" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
               MachineLearning`MLProcessor["ToLowerCase", 
                Association[
                "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                 "Input" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Version" -> {11.3, 0}, "ID" -> 1785337925, "Output" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]]]]}, 
             "Invertibility" -> "Approximate", "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
             Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1]], "Processors" -> {
               MachineLearning`MLProcessor["RemoveDiacritics", 
                Association[
                "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                 "Input" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Version" -> {11.3, 0}, "ID" -> 1460534394, "Output" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
               MachineLearning`MLProcessor["RemoveDiacritics", 
                Association[
                "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                 "Input" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Version" -> {11.3, 0}, "ID" -> 1829895964, "Output" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]]]]}, 
             "Invertibility" -> "Approximate", "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f5" -> Association["Type" -> "Text", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
             Association[
              "f5" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
                "f6" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Processors" -> {
               MachineLearning`MLProcessor["Sequence", 
                Association[
                "Input" -> 
                 Association[
                  "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "f5" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                 "Processors" -> {
                   MachineLearning`MLProcessor["TextToNominalSequence", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "\\", "|", "\\", ">", "/", "~", "`", "#", 
                    "^"}, {":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", 
                    ":-p", ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", 
                    "</3"}, {"=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {11.3, 0}, "ID" -> 1910168736, "Output" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]]]], 
                   MachineLearning`MLProcessor["NominalSequenceToTFIDFVector", 
                    Association[
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "Input" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
                    MachineLearning`SortedHashAssociation[
                    Association[
                    "KeyHashes" -> {-2141154294, -2058740639, -1845699513, \
-1843446600, -1791641969, -1665998395, -1562782762, -1545092043, -1414818291, \
-1065983197, -905585606, -862560124, -786021929, -774109511, -619189316, \
-444538291, -423084356, -330997508, -201117170, -55858870, -51013056, 
                    15120027, 52853385, 56575974, 103005822, 218590918, 
                    230306246, 352180359, 482076569, 568920227, 760938629, 
                    848520910, 936686033, 1060381344, 1242306922, 1291465285, 
                    1332341742, 1391954628, 1427809983, 1469592414, 
                    1537620900, 1566244977, 1598563937, 1657690201, 
                    1730620472, 1928362558, 1984517019, 2030230131, 
                    2038342493, 2062909003, 2104243402}, "Values" -> None, 
                    "DefaultValue" -> -1, "HashFunction" -> 
                    Function[{
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-32"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-32"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-32"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwBuL/DIH/E0r4D6DTez+ayrJGPdmPLt5cNMn+wgtOotWj
01X1vw5mr2LDKY+LxmWvl7nh09Uz3hPtTnRafLVWQ+zivwTdTWsa3b0Abm7N
8Q==
                    "], "Version" -> {11.3, 0}, "ID" -> 1737956577, "Output" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]]}, 
                 "Invertibility" -> "Impossible", "Missing" -> "Forbidden"]], 
               MachineLearning`MLProcessor["Sequence", 
                Association[
                "Input" -> 
                 Association[
                  "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "f6" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                 "Processors" -> {
                   MachineLearning`MLProcessor["TextToNominalSequence", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "Input" -> 
                    Association[
                    "f6" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "\\", "|", "\\", ">", "/", "~", "`", "#", 
                    "^"}, {":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", 
                    ":-p", ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", 
                    "</3"}, {"=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {11.3, 0}, "ID" -> 1407726189, "Output" -> 
                    Association[
                    "f6" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]]]], 
                   MachineLearning`MLProcessor["NominalSequenceToTFIDFVector", 
                    Association[
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "Input" -> 
                    Association[
                    "f6" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
                    MachineLearning`SortedHashAssociation[
                    Association["KeyHashes" -> CompressedData["
1:eJwBbQGS/iFib1JuAQAAAFgAAADnwjaAMyZigFQqJYgaRcaKLYYPksPoTpgF
l1GZ0OkOmsXhspwzRmuq5NZjq41Lb68iNum8sPUuwCNjdsA5K1nDCyD1xPIw
NMeBt2XJOtwFyhVmm86fbEXRWz500aNqjdE/JibSyCUn0rwMPtJpArnUjJv4
2euLqeJyvuXi7O4H6UeQdO4Na7jugj+G87u1pfqvJ3v8+r+NBie9OAnjrIQK
gJqQDZ6CTg6H2P0U7YNZF/QtMx6nUFIg+//CIpMKdCReu70mQoTYJ3EoQCqq
yO4udMX8M4FPnztMxbU9TbD1QNxk9UZ4YzBHktEwR7ZacUeFM5hJY8XuSUUy
+kwFtl1PfFqNT1+ak1ChU0dRwT8OVH9RAVVKKsBWie+vWDZX81u5ov5cIVkO
X2GX0WAHmeFmOv0fatIbyWpoh1xx61HncymGi3SxLkt1rzRBdhim+Xdz2gJ5
hUYde7r4anvjpvt+sW2wDA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-32"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-32"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-32"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGCIAOKEwtjfp14IHqCU9jGv3/5YjxnOdw75Y8bqxoehLm5P
Xm3O80/7qWUvLntopY/e7iREWyWm7FzAzj1o/YGeLqhNAwBQkZDd
                    "], "Version" -> {11.3, 0}, "ID" -> 2026120409, "Output" -> 
                    Association[
                    "f6" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]]}, 
                 "Invertibility" -> "Impossible", "Missing" -> "Forbidden"]]},
              "Invertibility" -> "Impossible", "Missing" -> "Forbidden"]], 
           MachineLearning`MLProcessor["MergeVectors", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f5" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
                "f6" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1], "(f1f2f3f4)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 4]], 
             "Spans" -> {
               Span[1, 51], 
               Span[52, 139], 
               Span[140, 143]}, 
             "Wrappers" -> {SparseArray, SparseArray, Identity}, "Output" -> 
             Association[
              "(f5f6(f1f2f3f4))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoB2IRMJhiP0oPLtpNPLbkomv7KD1KD0maAQw+4KQBpUxU
Zg==
                  "], "Type" -> "NumericalVector"]], "Version" -> {11.3, 0}, 
             "ID" -> 58313536]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2133794879]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {222.0837037037037}, 
             "StandardDeviation" -> {18.697512638722174`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 206855535]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1050281478]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (222.0837037037037 + 
       18.697512638722174` #& ), 
      "ProcessorFunction" -> (-11.877713789788958` + 0.05348304982177255 #& ),
       "Name" -> "value", 
      "Quantiles" -> {-1.9796057592735121`, 3.5927932016569697`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["Trees" -> {
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray[
            "Real32",{-0.05997170880436897, -0.02652340941131115, \
-0.015276688151061535`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.023869233205914497`, 0.008241134695708752, 
            0.019037988036870956`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02291446179151535, 0.007911489345133305, 
            0.01827646791934967}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.021997885778546333`, 0.007595030125230551, 
            0.017545409500598907`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02111796848475933, 0.007291228510439396, 
            0.01684359274804592}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.020273249596357346`, 0.006999579723924398, 
            0.016169849783182144`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.15851110219955444`}],
           "LeafValues" -> 
          RawArray["Real32",{-0.017706075683236122`, 0.01225805189460516}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 143}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, 0.24383080005645752`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.018754076212644577`, 0.00640049809589982, 
            0.015032732859253883`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.15851110219955444`}],
           "LeafValues" -> 
          RawArray["Real32",{-0.016359467059373856`, 0.011325784958899021`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{143, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.09908995777368546, -9.999999682655225*^-21}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.01734953559935093, 0.0057187448255717754`, 
            0.014109295792877674`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.018503012135624886`, 0.002297456143423915, 
            0.014179861173033714`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.15851110219955444`}],
           "LeafValues" -> 
          RawArray["Real32",{-0.014595696702599525`, 0.010104713030159473`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.017179062590003014`, 0.0020836598705500364`, 
            0.013208477757871151`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.010307946242392063`, 0.012369535863399506`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.016079582273960114`, 0.001894288812763989, 
            0.012412131763994694`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.015436399728059769`, 0.0018185172230005264`, 
            0.01191564742475748}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.009359569288790226, 0.011231482960283756`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.014444560743868351`, 0.0016495066229254007`, 
            0.011195672675967216`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.008739279583096504, 0.010487135499715805`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.013517207466065884`, 0.0018659590277820826`, 
            0.011384682729840279`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.008200593292713165, 0.009840711951255798}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.01264849491417408, 0.0015781052643433213`, 
            0.010844945907592773`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.007696407847106457, 0.009235689416527748}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.007388551719486713, 0.008866261690855026}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.011539156548678875`, 0.001122772227972746, 
            0.01025598868727684}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006933807861059904, 0.008320569060742855}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.010800238698720932`, 0.0008975822711363435, 
            0.009774429723620415}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006508178077638149, 0.007809813600033522}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.010107901878654957`, 0.0006924662156961858, 
            0.009316511452198029}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006109781563282013, 0.007331737782806158}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.007082813885062933, 0.005902344826608896}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.009175881743431091, 0.00033474512747488916`, 
            0.008793315850198269}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.005544706247746944, 0.006653647404164076}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.008587058633565903, 0.0001771931565599516, 
            0.008384551852941513}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0052075800485908985`, 0.006249096244573593}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.008035273291170597, 
            0.00738273561000824, -0.0004021392669528723}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.007713861297816038, 
            0.007087426260113716, -0.0003860538126900792}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.004720382858067751, 0.005664459429681301}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.007216491736471653, 
            0.006681199185550213, -0.0004191641346551478}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006927832495421171, 
            0.006413951050490141, -0.00040239759255200624`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.004280618857592344, 0.005136742722243071}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006479494273662567, 
            0.006046096794307232, -0.0004303308087401092}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.006220314186066389, 
            0.005804253276437521, -0.0004131176683586091}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0038836330641061068`, 0.004660359583795071}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.005816156510263681, 
            0.005471108481287956, -0.0004365388012956828}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0036246858071535826`, 0.004349623341113329}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.005438522901386023, 
            0.00515802251175046, -0.0004563598777167499}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0052209822461009026`, 
            0.004951701499521732, -0.00043810546048916876`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.003289430169388652, 0.003947316203266382}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.00488056568428874, 
            0.004668108187615871, -0.00045441524707712233`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 141}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.25064903497695923`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0046853432431817055`, 
            0.004481383599340916, -0.0004362387990113348}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0029867386911064386`, 
            0.0035840861964970827`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0002487475867383182, 
            0.0042244731448590755`, -0.0045792218297719955`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0028438358567655087`, 0.003412602934986353}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 140}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.2928851842880249}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.00009357457020087168, 
            0.003981554880738258, -0.004456773400306702}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.002709875116124749, 0.003251850139349699}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0026014798786491156`, 
            0.0031217760406434536`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.00014101766282692552`, 
            0.0036841973196715117`, -0.004351528827100992}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.002481757430359721, 0.0029781083576381207`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.003844647202640772, -0.0020378667395561934`, 
            0.006173637695610523}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.002340929117053747, 0.0028091149870306253`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.00047174590872600675`, 
            0.003328724065795541, -0.004276002291589975}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.0035889637656509876`, -0.0020220093429088593`,
             0.005899831652641296}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0021995066199451685`, 
            0.0026394077576696873`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.0006754609639756382, 
            0.003060831455513835, -0.004173554014414549}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0021059568971395493`, 0.002527148462831974}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.003272496396675706, -0.002055061748251319, 
            0.005621138494461775}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0019878714811056852`, 0.002385445637628436}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.0030620819889009, -0.0020245437044650316`, 
            0.005375846289098263}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0018771697068586946`, 0.00225260341539979}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.0011277800658717752`, 
            0.0026448045391589403`, -0.004150413908064365}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0018045257311314344`, 
            0.0021654306910932064`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.002807280980050564, -0.002035564975813031, 
            0.005133640952408314}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.001704607275314629, 0.0020455284975469112`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.001330915722064674, 
            0.002385813510045409, -0.00405755965039134}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 128}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.25064903497695923`, -9.999999682655225*^-21}],
           "LeafValues" -> 
          RawArray["Real32",{-0.002649250440299511, -0.001991969533264637, 
            0.004925787448883057}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0016169697046279907`, 0.001940363785251975}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0019838984590023756`, -0.0016532486770302057`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.001595275360159576, 0.0019143305253237486`}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0019543152302503586`, -0.0016285961028188467`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 140}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.20826789736747742`, 0.15559718012809753`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0022977562621235847`, 
            0.004241609014570713, -0.0016156018245965242`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{0.0018895803950726986`, -0.001574650639668107}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0016123040113598108`, 
            0.0019347649067640305`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.0014553588116541505`, 
            0.002253156853839755, -0.004030394833534956}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0018687245901674032`, -0.0015572706470265985`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0015969764208421111`, 
            0.0019163716351613402`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 140}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.20826789736747742`, 0.15559718012809753`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0022320146672427654`, 
            0.004144495353102684, -0.0015936216805130243`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0018565637292340398`, -0.0015471363440155983`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0015711903106421232`, 
            0.0018854282097890973`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0018313222099095583`, -0.0015261019580066204`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.001548021100461483, 0.001857625669799745}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0018063676543533802`, -0.0015053064562380314`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.001421252265572548, 
            0.002224711934104562, -0.003963780123740435}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 140}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.20826789736747742`, 0.15559718012809753`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.002224682830274105, 
            0.004053364507853985, -0.0015108695952221751`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.001530693843960762, 0.001836832845583558}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{
            0.0018000778509303927`, -0.0015000649727880955`}], "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{142}], 
          "NumericalThresholds" -> RawArray["Real32",{0.09527125954627991}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0015084679471328855`, 0.00181016162969172}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{140}], 
          "NumericalThresholds" -> RawArray["Real32",{-0.13346588611602783`}],
           "LeafValues" -> 
          RawArray["Real32",{0.0017751388950273395`, -0.001479282509535551}], 
          "Children" -> RawArray["Integer16",{{-1, -2}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 140}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.20826789736747742`, 0.15559718012809753`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0021577959414571524`, 
            0.0039049864280968904`, -0.0014389343559741974`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{141, 142}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{9.999999682655225*^-21, -0.3080126941204071}], 
          "LeafValues" -> 
          RawArray["Real32",{0.001485194661654532, 
            0.0021520168520510197`, -0.003944642376154661}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, -3}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0]]}, "ClassNumber" -> 1, "IterationsNumber" -> 100, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "(f5f6(f1f2f3f4))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoB2IRMJhiP0oPLtpNPLbkomv7KD1KD0maAQw+4KQBpUxU
Zg==
              "], "Type" -> "NumericalVector"]], "Output" -> 
         Association[
          "(f5f6(f1f2f3f4))" -> 
           Association[
            "Type" -> "NumericalVector", "Weight" -> 6.000000000000009]], 
         "Processors" -> {
           MachineLearning`MLProcessor["DensifyNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f5f6(f1f2f3f4))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoB2IRMJhiP0oPLtpNPLbkomv7KD1KD0maAQw+4KQBpUxU
Zg==
                  "], "Type" -> "NumericalVector"]], "Version" -> {11.3, 0}, 
             "ID" -> 2086563294, "Output" -> 
             Association[
              "(f5f6(f1f2f3f4))" -> 
               Association[
                "Type" -> "NumericalVector", "Weight" -> 
                 6.000000000000009]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "NumericalVector", "Weight" -> 6.000000000000009], 
             "Key" -> "(f5f6(f1f2f3f4))", "Invertibility" -> "Perfect", 
             "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "Missing" -> "Allowed"]], 
      "DistributionData" -> {NormalDistribution, {1.4935258632808994`}}, 
      "Method" -> "GradientBoostedTrees", "Options" -> 
      Association[
       "BoostingMethod" -> 
        Association["Value" -> "Gradient", "Options" -> Association[]], 
        MaxTrainingRounds -> 
        Association["Value" -> 100, "Options" -> Association[]], 
        "LeavesNumber" -> 
        Association["Value" -> 60, "Options" -> Association[]], 
        "LearningRate" -> 
        Association["Value" -> 0.04, "Options" -> Association[]], 
        ValidationSet -> 
        Association["Value" -> Automatic, "Options" -> Association[]], 
        "MaxBinNumber" -> 
        Association["Value" -> 255, "Options" -> Association[]], 
        "ThreadNumber" -> 
        Association["Value" -> 2, "Options" -> Association[]], "MaxDepth" -> 
        Association["Value" -> 6, "Options" -> Association[]], "LeafSize" -> 
        Association["Value" -> 7, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFrequency" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "MinGainToSplit" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], "LossFunction" -> 
        Association[
         "Value" -> "MeanSquaredError", "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[4.800923944671688, 0.4048814701069068], 
         "StandardDeviation" -> 
         PlusMinus[29.15150683124881, 8.818192957483996], "EvaluationTime" -> 
         0.0030055764754105888`, "TestSize" -> 10, "TrainingSize" -> 22, 
         "TrainingTime" -> 0.47720237130210547`, "TrainingMemory" -> 612488, 
         "ModelMemory" -> 149944, "ExperimentCount" -> 1, "ModelUtility" -> 
         0.012214052237451171`, "MeanCrossEntropyHistory" -> {
           PlusMinus[4.800923944671688, 0.2862944330893722]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[29.15150683124881, 6.23540403804839]}, 
         "Configuration" -> {
          "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
           MaxTrainingRounds -> 100, "LeavesNumber" -> 60, "LearningRate" -> 
           0.04, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
           "ThreadNumber" -> 2, "MaxDepth" -> 6, "LeafSize" -> 7, 
           "FeatureFraction" -> 1, "BaggingFraction" -> 1, "BaggingFrequency" -> 
           0, "MinGainToSplit" -> 0, "L1Regularization" -> 0, 
           "L2Regularization" -> 0, "LossFunction" -> "MeanSquaredError"}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 17]}], 
        Association["ID" -> 50328577315204]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[4.800923944671688, 0.4048814701069068], 
              "StandardDeviation" -> 
              PlusMinus[29.15150683124881, 8.818192957483996], 
              "EvaluationTime" -> 0.0030055764754105888`, "TestSize" -> 10, 
              "TrainingSize" -> 22, "TrainingTime" -> 0.47720237130210547`, 
              "TrainingMemory" -> 612488, "ModelMemory" -> 149944, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.012214052237451171`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[4.800923944671688, 0.2862944330893722]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[29.15150683124881, 6.23540403804839]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0030055764754105888`, "ModelMemory" -> 
             149944, "StandardDeviation" -> 
             PlusMinus[29.15150683124881, 8.818192957483996], 
             "TrainingMemory" -> 612488, "TrainingTime" -> 
             0.6060470115536739], "Index" -> 1], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 500], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.0456873522338315`, 0.2903614768844202], 
              "StandardDeviation" -> 
              PlusMinus[33.2034941489122, 10.917442821211578`], 
              "EvaluationTime" -> 0.00015562434806016352`, "TestSize" -> 10, 
              "TrainingSize" -> 22, "TrainingTime" -> 0.13630016304231451`, 
              "TrainingMemory" -> 119264, "ModelMemory" -> 20704, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.01220563821728482, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[5.0456873522338315`, 0.20531656930031447`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[33.2034941489122, 7.719797852095099]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015562434806016352`, "ModelMemory" -> 
             20704, "StandardDeviation" -> 
             PlusMinus[33.2034941489122, 10.917442821211578`], 
             "TrainingMemory" -> 119264, "TrainingTime" -> 
             0.17310120706373944`], "Index" -> 2], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 200], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.0456873522338315`, 0.2903614768844202], 
              "StandardDeviation" -> 
              PlusMinus[33.2034941489122, 10.917442821211578`], 
              "EvaluationTime" -> 0.00005345524289634119, "TestSize" -> 10, 
              "TrainingSize" -> 22, "TrainingTime" -> 0.1908933372895821, 
              "TrainingMemory" -> 119248, "ModelMemory" -> 20704, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.012205639464324018`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[5.0456873522338315`, 0.20531656930031447`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[33.2034941489122, 7.719797852095099]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005345524289634119, "ModelMemory" -> 
             20704, "StandardDeviation" -> 
             PlusMinus[33.2034941489122, 10.917442821211578`], 
             "TrainingMemory" -> 119248, "TrainingTime" -> 
             0.24243453835776926`], "Index" -> 3], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.01], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 4], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 5], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 3], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 6], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 7], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.004], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.0456873522338315`, 0.2903614768844202], 
              "StandardDeviation" -> 
              PlusMinus[33.2034941489122, 10.917442821211578`], 
              "EvaluationTime" -> 0.000053072873490787957`, "TestSize" -> 10, 
              "TrainingSize" -> 22, "TrainingTime" -> 0.12945345646647843`, 
              "TrainingMemory" -> 119216, "ModelMemory" -> 20704, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.012205639468991081`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[5.0456873522338315`, 0.20531656930031447`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[33.2034941489122, 7.719797852095099]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000053072873490787957`, "ModelMemory" -> 
             20704, "StandardDeviation" -> 
             PlusMinus[33.2034941489122, 10.917442821211578`], 
             "TrainingMemory" -> 119216, "TrainingTime" -> 
             0.16440588971242762`], "Index" -> 8], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 100], "LeavesNumber" -> 
             Association["Value" -> 13], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.0456873522338315`, 0.2903614768844202], 
              "StandardDeviation" -> 
              PlusMinus[33.2034941489122, 10.917442821211578`], 
              "EvaluationTime" -> 0.00005360819065856247, "TestSize" -> 10, 
              "TrainingSize" -> 22, "TrainingTime" -> 0.14529349146092643`, 
              "TrainingMemory" -> 119264, "ModelMemory" -> 20704, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.012205639462457193`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[5.0456873522338315`, 0.20531656930031447`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[33.2034941489122, 7.719797852095099]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005360819065856247, "ModelMemory" -> 
             20704, "StandardDeviation" -> 
             PlusMinus[33.2034941489122, 10.917442821211578`], 
             "TrainingMemory" -> 119264, "TrainingTime" -> 
             0.18452273415537657`], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["GradientBoostedTrees"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association["ID" -> 50324282347908]], "MaxTrainingSize" -> 27, 
      "LastReportingTime" -> 3.7480638760464781`17.326381972863988*^9, 
      "PreprocessorEvaluationTime" -> 0.0000151767377192654`3., 
      "PreprocessorMemory" -> 95600, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 22, "TimeBudgets" -> 1.9508197671882685`, 
          "ElapsedTimes" -> 1.9301104, "ExperimentCounts" -> 5]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[50332872282500]], "ID" -> 50337167249796]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {198.38}, "ID" -> 
           204440719], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {207.67}, "ID" -> 
           212050181], "f3" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {188.31}, "ID" -> 
           468711305], "f4" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {196.92}, "ID" -> 
           760872434], "f5" -> 
         Association[
          "Type" -> "Text", "Weight" -> 1, "Values" -> {"1,585,980,000"}, 
           "ID" -> 184774915], "f6" -> 
         Association[
          "Type" -> "Text", "Weight" -> 1, "Values" -> {"20,203,492,382"}, 
           "ID" -> 506469988]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 3.969212380203665, "MaxTrainingMemory" -> 829760, 
      "DataMemory" -> 6624, "FunctionMemory" -> 367064, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 10, 9, 8, 51, 16.4945037`8.969914198192956}, 
        "Instant", "Gregorian", 3.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86", "OperatingSystem" -> "Windows", "SystemWordLength" -> 32, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7480523984507217`*^9, 3.7480524255262704`*^9}, 
   3.7480529363364873`*^9, {3.748053032455985*^9, 3.7480530766975155`*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"eb1c1fd6-19f0-4679-af95-fb649811f0cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"Keys", "@", 
      RowBox[{"train", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "10"}], ";;"}], "]"}], "]"}]}], "]"}], "-", 
    RowBox[{"Values", "@", 
     RowBox[{"train", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "10"}], ";;"}], "]"}], "]"}]}]}], "]"}], "//", 
  "ListLinePlot"}]], "Input",
 CellChangeTimes->{{3.7480526379744215`*^9, 3.7480526650349693`*^9}, 
   3.748052940145705*^9, {3.7480529705264425`*^9, 3.74805301156979*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"c72eed56-e07c-4b70-a869-ae02be6b580b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 3.646766550628058}, {2., 12.573291863908992`}, {
      3., -61.99323344937196}, {4., -7.682474296052874}, {5., 
      21.239256504881297`}, {6., -12.8455573654187}, {
      7., -31.900445565598346`}, {8., 26.89444263458128}, {
      9., -6.899231273226235}, {10., -53.34323344937198}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-61.99323344937196, 26.89444263458128}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7480529410307555`*^9, {3.7480529742366548`*^9, 3.7480530802137165`*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"042aba02-ed87-4e87-aa13-ec8fcadac369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"train", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "10"}], ";;"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7480524321586494`*^9, 3.748052482969556*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"6bf75b5a-e6ab-46a0-bedb-43277d1abf84"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "8.5332956566813376043`2.5778409465310697", "\[PlusMinus]",
                     "1.7614453630715400934`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorMeasurementsObject[
   Association["Model" -> PredictorFunction[
      Association[
      "ExampleNumber" -> 27, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical"], "f2" -> 
              Association["Type" -> "Numerical"], "f3" -> 
              Association["Type" -> "Numerical"], "f4" -> 
              Association["Type" -> "Text"], "f5" -> 
              Association["Type" -> "Text"]], "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Text", "Weight" -> 1]], "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["Transpose", 
                  Association["FeatureNumber" -> 5]], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Text", "Text"}, 
                   "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            False, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
            Association[
             "(f4f5(f1f2f3))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoBuJqkXXuD6um2I/Sg4P+wlrrGH+hfZQepYcEzQAGHzBo
AFqw+l4=
                 "], "Type" -> "NumericalVector"]], "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f3" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Version" -> {11.3, 0}, "ID" -> 1847348274]], 
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1], "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Output" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1], "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Processors" -> {
                  MachineLearning`MLProcessor["ImputeMissing", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Fill" -> "", "Output" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Type" -> "Text", "Version" -> {11.3, 0}, "ID" -> 
                    808940940]], 
                  MachineLearning`MLProcessor["ImputeMissing", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Fill" -> "", "Output" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Type" -> "Text", "Version" -> {11.3, 0}, "ID" -> 
                    1448021894]], 
                  MachineLearning`MLProcessor["ImputeMissing", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "(f1f2f3)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "ExampleNumber" -> 27, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {226.04296296296297`, 231.58740740740737`, 
                    216.1696296296296}, "Method" -> "Naive", "VectorLength" -> 
                    3, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {226.04296296296297`, 231.58740740740737`, 
                    216.1696296296296}, 
                    "StandardDeviation" -> {30.455897296085702`, 
                    28.266537551145927`, 29.800443009568735`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                    MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 1]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                    "Model" -> 
                    Association[
                    "Matrix" -> {{-0.5801283975133711}, \
{-0.5803473283555267}, {-0.5715312947417411}}, "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {226.04296296296297`, 231.58740740740737`, 
                    216.1696296296296}, 
                    "StandardDeviation" -> {30.455897296085702`, 
                    28.266537551145927`, 29.800443009568735`}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 1, "Method" -> "Linear"], 
                    "PerformanceGoal" -> Automatic, "Invertibility" -> 
                    "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.032814177645766864`, 
                    "MaxTrainingMemory" -> 41488, "DataMemory" -> 784, 
                    "FunctionMemory" -> 15384, "LanguageVersion" -> {11.3, 0},
                     "Date" -> 
                    DateObject[{
                    2018, 10, 9, 8, 40, 19.8179439`9.049633532026794}, 
                    "Instant", "Gregorian", 3.], "ProcessorCount" -> 2, 
                    "ProcessorType" -> "x86", "OperatingSystem" -> "Windows", 
                    "SystemWordLength" -> 32, "Evaluations" -> {}]]][#, 
                    "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                    "Method" -> "DimensionReduction", "VectorLength" -> 3, 
                    "Output" -> 
                    Association[
                    "(f1f2f3)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                    "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                    456662719]]}, "Invertibility" -> "Perfect", "Missing" -> 
                "Imputed"]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Mean" -> {226.04296296296297`, 231.58740740740737`, 
                 216.1696296296296}, 
                "StandardDeviation" -> {30.455897296085702`, 
                 28.266537551145927`, 29.800443009568735`}, "Output" -> 
                Association[
                 "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Version" -> {11.3, 0}, "ID" -> 46604578]], 
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1]], "Processors" -> {
                  MachineLearning`MLProcessor["ToLowerCase", 
                   Association[
                   "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Version" -> {11.3, 0}, "ID" -> 33672869, "Output" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
                  MachineLearning`MLProcessor["ToLowerCase", 
                   Association[
                   "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Version" -> {11.3, 0}, "ID" -> 685022405, "Output" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]]]]}, 
                "Invertibility" -> "Approximate", "Missing" -> "Allowed"]], 
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1]], "Processors" -> {
                  MachineLearning`MLProcessor["RemoveDiacritics", 
                   Association[
                   "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Version" -> {11.3, 0}, "ID" -> 1072340558, "Output" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
                  MachineLearning`MLProcessor["RemoveDiacritics", 
                   Association[
                   "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Version" -> {11.3, 0}, "ID" -> 1460534394, "Output" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]]]]}, 
                "Invertibility" -> "Approximate", "Missing" -> "Allowed"]], 
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f4" -> Association["Type" -> "Text", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
                Association[
                 "f4" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 1]], 
                "Processors" -> {
                  MachineLearning`MLProcessor["Sequence", 
                   Association[
                   "Input" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "f4" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["TextToNominalSequence", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "Input" -> 
                    Association[
                    "f4" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "\\", "|", "\\", ">", "/", "~", "`", "#", 
                    "^"}, {":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", 
                    ":-p", ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", 
                    "</3"}, {"=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {11.3, 0}, "ID" -> 834210641, "Output" -> 
                    Association[
                    "f4" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor[
                    "NominalSequenceToTFIDFVector", 
                    Association[
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "Input" -> 
                    Association[
                    "f4" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
                    MachineLearning`SortedHashAssociation[
                    Association[
                    "KeyHashes" -> {-2141154294, -2058740639, -1843446600, \
-1791641969, -1718651524, -1562782762, -1414818291, -1065983197, -1009929609, \
-905585606, -786021929, -774109511, -664305998, -619189316, -459503001, \
-423084356, -330997508, -275490248, -201117170, -51013056, 15120027, 52853385,
                     103005822, 218590918, 230306246, 322384008, 352180359, 
                    482076569, 568920227, 648941471, 760938629, 848520910, 
                    934459985, 936686033, 1060381344, 1108622323, 1242306922, 
                    1291465285, 1332341742, 1391954628, 1427809983, 
                    1469592414, 1537620900, 1657690201, 1730620472, 
                    1928362558, 1984517019, 2030230131, 2038342493, 
                    2062909003}, "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-32"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-32"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-32"]]& , 
                    
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwAuL10mu2X/LmPwCja2MW/Tu9/fF+dHHj3rffHQ9wElSH
i0bXT66+n5s/9kw49BqnveTas457+i6fbwxU9we6ekL6ASTx1hk=
                    "], "Version" -> {11.3, 0}, "ID" -> 539723191, "Output" -> 
                    Association[
                    "f4" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]]}, 
                    "Invertibility" -> "Impossible", "Missing" -> 
                    "Forbidden"]], 
                  MachineLearning`MLProcessor["Sequence", 
                   Association[
                   "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["TextToNominalSequence", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Text", "Weight" -> 1]], 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "\\", "|", "\\", ">", "/", "~", "`", "#", 
                    "^"}, {":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", 
                    ":-p", ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", 
                    "</3"}, {"=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {11.3, 0}, "ID" -> 1910168736, "Output" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor[
                    "NominalSequenceToTFIDFVector", 
                    Association[
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "Input" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
                    MachineLearning`SortedHashAssociation[
                    Association["KeyHashes" -> CompressedData["
1:eJwBZQGa/iFib1JuAQAAAFYAAAAzJmKAGkXGii2GD5LD6E6YBZdRmXx1j5nQ
6Q6aJQbXm8Xhspx4/oWfVXOHojNGa6rk1mOrjUtvryI26byw9S7AI2N2wDkr
WcP3+x/H8jA0x4G3ZckiFu/KKDpzzZ9sRdFbPnTRPyYm0sglJ9K8DD7SjJv4
2eQYctrfo2nh64up4nK+5eL5UDzk7O4H6UeQdO4Na7juu7Wl+mxOgAD6v40G
J704CeOshAqAmpANjwc5EYfY/RT0LTMep1BSIJMKdCReu70mQoTYJ3EoQCqq
yO4udMX8MydNJTSBT587TMW1PU2w9UDcZPVGeGMwR5LRMEe2WnFHhTOYSWPF
7klFMvpMBbZdT3xajU9fmpNQ3N60UKFTR1F/UQFVSirAVonvr1g2V/NbIVkO
X2GX0WA6/R9q0hvJarphInHrUedzKYaLdLEuS3UYpvl3S371eoVGHXu6+Gp7
46b7fpsHrEc=
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-32"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-32"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-32"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-32"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAIA2K3vS+zHC4KHiCVFnwjIvZBjA+n/OfNd27GH2IjqP7X
6/nWTp2f9tPKHQNtHr3MnxobFhbfzUE3f6Dbh05LnZ8+7dx/JqrbCwCgnmYc

                    "], "Version" -> {11.3, 0}, "ID" -> 1737956577, "Output" -> 
                    Association[
                    "f5" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]]}, 
                    "Invertibility" -> "Impossible", "Missing" -> 
                    "Forbidden"]]}, "Invertibility" -> "Impossible", 
                "Missing" -> "Forbidden"]], 
              MachineLearning`MLProcessor["MergeVectors", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f4" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1], "f5" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 1], 
                  "(f1f2f3)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 3]], 
                "Spans" -> {
                  Span[1, 50], 
                  Span[51, 136], 
                  Span[137, 139]}, 
                "Wrappers" -> {SparseArray, SparseArray, Identity}, "Output" -> 
                Association[
                 "(f4f5(f1f2f3))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoBuJqkXXuD6um2I/Sg4P+wlrrGH+hfZQepYcEzQAGHzBo
AFqw+l4=
                    "], "Type" -> "NumericalVector"]], "Version" -> {11.3, 0},
                 "ID" -> 351286497]]}, "Invertibility" -> "Impossible", 
            "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 572223297]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {225.9151851851852}, 
                "StandardDeviation" -> {30.435076056999254`}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1932812045]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 377505777]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (225.9151851851852 + 
          30.435076056999254` #& ), 
         "ProcessorFunction" -> (-7.422855942994457 + 
          0.032856826055804346` #& ), "Name" -> "value", 
         "Quantiles" -> {-1.3992140221838463`, 2.2810790643267973`}], "Prior" -> 
       Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
       "PerformanceGoal" -> "Quality", "BatchProcessing" -> Automatic, 
       "Model" -> Association["MeanFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association["Weights" -> CompressedData["
1:eJw1kV8oQ3EUx7fRWEpYHpYH3Rov3khy729pLxZFmhIvMv+WzJ+mzPAkkfYm
7YH8yd8UnrXrphaKF1reiJI8kD8LLzOxz609nHvvOef7Pd/vOVfqHHL3mgwG
w0h26uH2BJx+vyfYbCbp8fgqyn00jakIpcK7l6veFw+L/duLjazXDK1j4F2J
Z6zLjeagKJ08t9sXu8T1oVHpq8nTVl2SWuKdiMTbjsVru1WjDhfMfmuZiJ1Y
tIJYhcjxrYj3cLP8+2JTN98OquB4Q0ui0tIt5oum5ZaCumq0ElOPykPcBjYC
B21mjFr9irMwqsCXDGPKXWIxArdfGpKfo+GjfM2ofp51yvihzw70wDOXGXDw
Rf41Mi7Aoove4OyW7nu9PNMBlzhV3fb0fuR4AI8ndk8uN2h4Rw8vvOmhAZb9
4V6WujRuB4caevjCMx6pg5uTr/RbfHyfH4EHiyd845/bcmNyvrmPSfrRtcqa
dvXbUMMzs5kHLn1TcuaRB3YW9NvzL4i/2hkVbeYzA1/pPjV2wwO+6ru2HTfu
NcdTMuz4B+aZAAk=
               "], "Biases" -> RawArray["Real32",{0.}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
              139, "$InputDimensions" -> {139}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{139}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
           Association["Version" -> "11.3.5"]], 
         "DistributionData" -> {NormalDistribution, 1.5700919161298335`}, 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "(f4f5(f1f2f3))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoBuJqkXXuD6um2I/Sg4P+wlrrGH+hfZQepYcEzQAGHzBo
AFqw+l4=
                 "], "Type" -> "NumericalVector"]], "Output" -> 
            Association[
             "(f4f5(f1f2f3))" -> 
              Association[
               "Type" -> "NumericalVector", "Weight" -> 5.000000000000002]], 
            "Processors" -> {
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f4f5(f1f2f3))" -> Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGDoBuJqkXXuD6um2I/Sg4P+wlrrGH+hfZQepYcEzQAGHzBo
AFqw+l4=
                    "], "Type" -> "NumericalVector"]], 
                "Mean" -> CompressedData["
1:eJxTTMoPSmVkYGDoBmJh08afk55O2Q+jlXev71thvm0/urjTEpbQ7YYL4fz4
M8zZ+1ZewFAHoZcQ1E8sja5PY8O/1T+DdxCtnlia+dL7WIm/G0h2D6nqCek/
HLJpk/7p6STTXw6b8oWIL8Ep78Nsw/Xy3yaC6k/W9FxRD7lPM3cMtHn0Ml/Z
eGdmRfIGuvkD3T50erFLZZdl/E6q23shzqma8+32PRn6C/e2qN2wYQCDUzYA
NbJ6rw==
                 "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDoBuJOJWbf1MW77GE0AxgI2KGLB5xRCTVN3Qfnr/gyfXb5
Y0cMdRD6lD0h/cTS6PrWbc4I+sO4imj1xNL/P2+vyTyxn2T3kKqekP7zdaV/
joTsI5neMvNXpNShgzjl5yw+le385jBB9a9+XFpZrxVqRyt3DLR59DI/xG+N
ueEywuFNK/vQaa5oNtUXPbjlyaX1wOXFB/vk/yDw3r4ZSgMA7udBlA==
                 "], "Output" -> 
                Association[
                 "(f4f5(f1f2f3))" -> 
                  Association[
                   "Type" -> "NumericalVector", "Weight" -> 
                    5.000000000000002]], "Version" -> {11.3, 0}, "ID" -> 
                808780254]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 5.000000000000002], 
                "Key" -> "(f4f5(f1f2f3))", "Invertibility" -> "Perfect", 
                "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
            "Missing" -> "Allowed"]], "Method" -> "LinearRegression", 
         "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 100., "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association[
            "Value" -> "NormalEquation", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[4.873162556875009, 0.13618085846358707`], 
            "StandardDeviation" -> 
            PlusMinus[16.129851034970603`, 7.884619118935521], 
            "EvaluationTime" -> 0.00009260987002499167, "TestSize" -> 10, 
            "TrainingSize" -> 22, "TrainingTime" -> 0.06380215901061151, 
            "TrainingMemory" -> 1654256, "ModelMemory" -> 21904, 
            "ExperimentCount" -> 1, "ModelUtility" -> 0.001377606103324072, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[4.873162556875009, 0.09629440848740785]}, 
            "StandardDeviationHistory" -> {
              PlusMinus[16.129851034970603`, 5.575267646072408]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              100., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 27], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
             "ModelMemory", "ExperimentCount", "ModelUtility", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 190795482730233]], "Configurations" -> Dataset[
           Association[
           Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[3.6247855765440695`*^7, 2.530037277129945*^7], 
                 "StandardDeviation" -> 
                 PlusMinus[73249.74636028368, 26439.159340467017`], 
                 "EvaluationTime" -> 0.00009146276180833199, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.1260710167049546, 
                 "TrainingMemory" -> 1654376, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 7.002433266059521*^-11, "MeanCrossEntropyHistory" -> {
                   PlusMinus[3.6247855765440695`*^7, 1.7890065153133325`*^7]},
                  "StandardDeviationHistory" -> {
                   PlusMinus[73249.74636028368, 18695.308858515873`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00009146276180833199, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[73249.74636028368, 26439.159340467017`], 
                "TrainingMemory" -> 1654376, "TrainingTime" -> 
                0.16011019121529235`], "Index" -> 1], 
            Association[
             "Value" -> "RandomForest", "Options" -> 
              Association[
               "FeatureFraction" -> Association["Value" -> Automatic], 
                "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
                Association["Value" -> Automatic], "DistributionSmoothing" -> 
                Association["Value" -> 0.5], "Implementation" -> 
                Association["Value" -> Automatic]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[3.919824046701181, 0.21780275472082888`], 
                 "StandardDeviation" -> 
                 PlusMinus[17.156201083893833`, 7.245691118866411], 
                 "EvaluationTime" -> 0.0026697031895726335`, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 1.1590136704709872`,
                  "TrainingMemory" -> 356008, "ModelMemory" -> 137016, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.0011061021681606012`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[3.919824046701181, 0.15400980482420842`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[17.156201083893833`, 5.123477324533582]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.0026697031895726335`, "ModelMemory" -> 
                137016, "StandardDeviation" -> 
                PlusMinus[17.156201083893833`, 7.245691118866411], 
                "TrainingMemory" -> 356008, "TrainingTime" -> 
                1.4719473614981538`], "Index" -> 2], 
            Association[
             "Value" -> "NearestNeighbors", "Options" -> 
              Association[
               "NeighborsNumber" -> Association["Value" -> Automatic], 
                "DistributionSmoothing" -> Association["Value" -> 0.5], 
                "NearestMethod" -> Association["Value" -> Automatic]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[6.827063027859238, 2.766186932488183], 
                 "StandardDeviation" -> 
                 PlusMinus[17.031734687796604`, 7.357356210573184], 
                 "EvaluationTime" -> 0.0001639600011012239, "TestSize" -> 10, 
                 "TrainingSize" -> 22, "TrainingTime" -> 
                 0.027617777424298506`, "TrainingMemory" -> 138816, 
                 "ModelMemory" -> 34128, "ExperimentCount" -> 1, 
                 "ModelUtility" -> 0.0012615588688783081`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[6.827063027859238, 1.9559895379920085`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[17.031734687796604`, 5.202436468101259]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.0001639600011012239, "ModelMemory" -> 
                34128, "StandardDeviation" -> 
                PlusMinus[17.031734687796604`, 7.357356210573184], 
                "TrainingMemory" -> 138816, "TrainingTime" -> 
                0.0350745773288591], "Index" -> 3], 
            Association[
             "Value" -> "DecisionTree", "Options" -> 
              Association[
               "DistributionSmoothing" -> Association["Value" -> 1], 
                "FeatureFraction" -> Association["Value" -> 1]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[4.093681300499671, 0.059718398817802346`], 
                 "StandardDeviation" -> 
                 PlusMinus[16.545056193990323`, 7.5144084912051685`], 
                 "EvaluationTime" -> 0.0000948276125772004, "TestSize" -> 10, 
                 "TrainingSize" -> 22, "TrainingTime" -> 0.3130611271026494, 
                 "TrainingMemory" -> 515984, "ModelMemory" -> 7392, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.0013260251068884159`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[4.093681300499671, 0.04222728476567074]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[16.545056193990323`, 5.313489200736948]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.0000948276125772004, "ModelMemory" -> 
                7392, "StandardDeviation" -> 
                PlusMinus[16.545056193990323`, 7.5144084912051685`], 
                "TrainingMemory" -> 515984, "TrainingTime" -> 
                0.39758763142036474`], "Index" -> 4], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[5.82297992392805, 0.3138538687272386], 
                 "StandardDeviation" -> 
                 PlusMinus[17.11986129712901, 7.266287832791735], 
                 "EvaluationTime" -> 0.00008435069086504195, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.04847832271366038,
                  "TrainingMemory" -> 1654256, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.0012520864512436925`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[5.82297992392805, 0.22192819887866289`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[17.11986129712901, 5.138041400620338]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00008435069086504195, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[17.11986129712901, 7.266287832791735], 
                "TrainingMemory" -> 1654256, "TrainingTime" -> 
                0.06156746984634868], "Index" -> 5], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[35.8440682960382, 21.40494578519089], 
                 "StandardDeviation" -> 
                 PlusMinus[70.8160428030125, 22.70416464988074], 
                 "EvaluationTime" -> 0.00009865130663273266, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.06250363250935276,
                  "TrainingMemory" -> 1654320, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.00007606033207522641, "MeanCrossEntropyHistory" -> {
                   PlusMinus[35.8440682960382, 15.135582315638887`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[70.8160428030125, 16.05426878510657]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00009865130663273266, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[70.8160428030125, 22.70416464988074], 
                "TrainingMemory" -> 1654320, "TrainingTime" -> 
                0.07937961328687801], "Index" -> 6], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[3.6251926315678705`*^11, 2.5304338336840326`*^11], 
                 "StandardDeviation" -> 
                 PlusMinus[7.325386028118833*^6, 2.6441905970756137`*^6], 
                 "EvaluationTime" -> 0.00009199807897610651, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.06687105585958172,
                  "TrainingMemory" -> 1654256, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 7.001601783462153*^-15, "MeanCrossEntropyHistory" -> {
                   PlusMinus[
                   3.6251926315678705`*^11, 1.7892869231418518`*^11]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[7.325386028118833*^6, 1.8697251019418724`*^6]}]},
               "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00009199807897610651, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[7.325386028118833*^6, 2.6441905970756137`*^6], 
                "TrainingMemory" -> 1654256, "TrainingTime" -> 
                0.08492624094166878], "Index" -> 7], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[4.873162556875009, 0.13618085846358707`], 
                 "StandardDeviation" -> 
                 PlusMinus[16.129851034970603`, 7.884619118935521], 
                 "EvaluationTime" -> 0.00009260987002499167, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.06380215901061151,
                  "TrainingMemory" -> 1654256, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.001377606103324072, "MeanCrossEntropyHistory" -> {
                   PlusMinus[4.873162556875009, 0.09629440848740785]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[16.129851034970603`, 5.575267646072408]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00009260987002499167, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[16.129851034970603`, 7.884619118935521], 
                "TrainingMemory" -> 1654256, "TrainingTime" -> 
                0.08102874194347662], "Index" -> 8], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.00001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association[
             "Experiments" -> {}, "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
                1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9],
             Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[5.838973387410401, 0.31688069711812605`], 
                 "StandardDeviation" -> 
                 PlusMinus[17.15248761473938, 7.247789089037071], 
                 "EvaluationTime" -> 0.00008848028044501681, "TestSize" -> 10,
                  "TrainingSize" -> 22, "TrainingTime" -> 0.06624320529566331,
                  "TrainingMemory" -> 1654288, "ModelMemory" -> 21904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 0.0012481954326230395`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[5.838973387410401, 0.2240684897593474]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[17.15248761473938, 5.1249608134679825`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00008848028044501681, "ModelMemory" -> 
                21904, "StandardDeviation" -> 
                PlusMinus[17.15248761473938, 7.247789089037071], 
                "TrainingMemory" -> 1654288, "TrainingTime" -> 
                0.08412887072549241], "Index" -> 10]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "DecisionTree", "LinearRegression", "NearestNeighbors", 
                "RandomForest"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
               TypeSystem`AnyLength]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory",
                  "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 10], 
           Association["ID" -> 190791187762937]], "MaxTrainingSize" -> 27, 
         "LastReportingTime" -> 3.7480632250142412`17.32638189742778*^9, 
         "PreprocessorEvaluationTime" -> 0.0000245758237644558`2., 
         "PreprocessorMemory" -> 94704, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 22, "TimeBudgets" -> 2.721617100535511, 
             "ElapsedTimes" -> 2.7951597000000006`, "ExperimentCounts" -> 9]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 1], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[190799777697529]], "ID" -> 
            190804072664825]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {221.58}, "ID" -> 
              204440719], "f2" -> 
            Association[
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {224.26}, "ID" -> 
              212050181], "f3" -> 
            Association[
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {195.31}, "ID" -> 
              468711305], "f4" -> 
            Association[
             "Type" -> "Text", "Weight" -> 1, "Values" -> {"2,019,910,000"}, 
              "ID" -> 760872434], "f5" -> 
            Association[
             "Type" -> "Text", "Weight" -> 1, "Values" -> {"22,602,064,199"}, 
              "ID" -> 184774915]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 5.749377502607759, "MaxTrainingMemory" -> 
         2358552, "DataMemory" -> 6192, "FunctionMemory" -> 205480, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2018, 10, 9, 8, 40, 25.4322651`9.157959962886412}, 
           "Instant", "Gregorian", 3.], "ProcessorCount" -> 2, 
         "ProcessorType" -> "x86", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 32, "Evaluations" -> {}]]], "TestSet" -> 
    Association[
     "Input" -> {{
        222.27, 228.32, 220.96, "1,547,330,000", "22,753,560,914"}, {
        247.34, 251.2, 233.81, "1,921,820,000", "25,254,412,109"}, {
        231.65, 231.75, 218.12, "2,097,310,000", "23,576,873,426"}, {
        225.25, 248.39, 221.57, "2,836,200,000", "22,994,636,921"}, {
        244.84, 245.11, 227.49, "1,748,740,000", "25,009,868,628"}, {
        229.04, 231.75, 218.67, "2,018,120,000", "23,414,405,283"}, {
        240.99, 247.46, 237.86, "1,693,470,000", "24,611,501,926"}, {
        218.65, 221.44, 209.11, "1,756,100,000", "22,342,857,545"}, {
        229.53, 233.9, 217.07, "1,678,260,000", "23,366,572,107"}, {
        215.44, 230.61, 212.65, "2,030,320,000", "22,019,534,943"}}, 
      "Output" -> {222.22, 246.58, 232.33, 224.59, 244.33, 228.49, 240.48, 
       218.5, 230.22, 215.85}], 
    "Predictions" -> {222.07522313619424`, 230.55684157224465`, 
     227.38099279697383`, 226.64202891994196`, 229.62348980880685`, 
     227.605377350515, 230.2087517965766, 223.45522321773205`, 
     234.96446324496225`, 224.39860098530247`}, "Distributions" -> {
      NormalDistribution[222.07522313619424`, 47.785866883891174`], 
      NormalDistribution[230.55684157224465`, 47.785866883891174`], 
      NormalDistribution[227.38099279697383`, 47.785866883891174`], 
      NormalDistribution[226.64202891994196`, 47.785866883891174`], 
      NormalDistribution[229.62348980880685`, 47.785866883891174`], 
      NormalDistribution[227.605377350515, 47.785866883891174`], 
      NormalDistribution[230.2087517965766, 47.785866883891174`], 
      NormalDistribution[223.45522321773205`, 47.785866883891174`], 
      NormalDistribution[234.96446324496225`, 47.785866883891174`], 
      NormalDistribution[224.39860098530247`, 47.785866883891174`]}, 
    "Modes" -> {222.07522313619424`, 230.55684157224465`, 227.38099279697383`,
      226.64202891994196`, 229.62348980880685`, 227.605377350515, 
     230.2087517965766, 223.45522321773205`, 234.96446324496225`, 
     224.39860098530247`}, "Weights" -> 
    SparseArray[Automatic, {10}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.003674569987366515, "SingleEvaluationTime" -> 
    0.0174978357891645668`2., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7480524762001686`*^9, 3.748052484295632*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"112f12d0-f6f7-4150-8931-2a85b9cf06e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"pm", "[", "\"\<MeanSquare\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7480524856947117`*^9, 3.748052505180826*^9}, {
  3.748052566035307*^9, 3.748052582201232*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"abea313d-363f-402b-8222-7c158ea9497a"],

Cell[BoxData["8.533295656681338`"], "Output",
 CellChangeTimes->{{3.748052493943184*^9, 3.748052501986644*^9}, {
  3.748052573525736*^9, 3.7480525826602583`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"fb20de05-56cc-434d-a190-6d9c9ee197d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.748052606962648*^9, 3.7480526086647453`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"9150184f-6568-4a47-abb2-9add984473ab"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], {{{
          222.07522313619424`, 222.22}}, {{230.55684157224465`, 246.58}}, {{
          227.38099279697383`, 232.33}}, {{226.64202891994196`, 224.59}}, {{
          229.62348980880685`, 244.33}}, {{227.605377350515, 228.49}}, {{
          230.2087517965766, 240.48}}, {{223.45522321773205`, 218.5}}, {{
          234.96446324496225`, 230.22}}, {{224.39860098530247`, 
          215.85}}}]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{222.07522313619424`, 222.22}]}}, 
          RowBox[{"{", 
            RowBox[{"222.07522313619424`", ",", "222.22`"}], "}"}]], 
         Annotation[#, {222.07522313619424`, 222.22}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{230.55684157224465`, 246.58}]}}, 
          RowBox[{"{", 
            RowBox[{"230.55684157224465`", ",", "246.58`"}], "}"}]], 
         Annotation[#, {230.55684157224465`, 246.58}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{227.38099279697383`, 232.33}]}}, 
          RowBox[{"{", 
            RowBox[{"227.38099279697383`", ",", "232.33`"}], "}"}]], 
         Annotation[#, {227.38099279697383`, 232.33}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{226.64202891994196`, 224.59}]}}, 
          RowBox[{"{", 
            RowBox[{"226.64202891994196`", ",", "224.59`"}], "}"}]], 
         Annotation[#, {226.64202891994196`, 224.59}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{229.62348980880685`, 244.33}]}}, 
          RowBox[{"{", 
            RowBox[{"229.62348980880685`", ",", "244.33`"}], "}"}]], 
         Annotation[#, {229.62348980880685`, 244.33}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{227.605377350515, 228.49}]}}, 
          RowBox[{"{", 
            RowBox[{"227.605377350515`", ",", "228.49`"}], "}"}]], 
         Annotation[#, {227.605377350515, 228.49}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{230.2087517965766, 240.48}]}}, 
          RowBox[{"{", 
            RowBox[{"230.2087517965766`", ",", "240.48`"}], "}"}]], 
         Annotation[#, {230.2087517965766, 240.48}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{223.45522321773205`, 218.5}]}}, 
          RowBox[{"{", 
            RowBox[{"223.45522321773205`", ",", "218.5`"}], "}"}]], 
         Annotation[#, {223.45522321773205`, 218.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{234.96446324496225`, 230.22}]}}, 
          RowBox[{"{", 
            RowBox[{"234.96446324496225`", ",", "230.22`"}], "}"}]], 
         Annotation[#, {234.96446324496225`, 230.22}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{224.39860098530247`, 215.85}]}}, 
          RowBox[{"{", 
            RowBox[{"224.39860098530247`", ",", "215.85`"}], "}"}]], 
         Annotation[#, {224.39860098530247`, 215.85}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxNxW0s1HEAB/CL/ykPNdZFrG67uuY8JJ1QHXZeiMlxnnqwTB66ynFSKqsV
Wlk0avO0HTVmaLtM3CVZlIfJuO3+Q5m4ySrMPHQc89BRvei+vxeffTgJaRGX
TBgMhuivf3uw5fwdfcnC//8u0ITHEncbqPQm4ihtWsOFfnyrIsC1UY1bHXSH
YjRYaBdk/2oIi6xXtsLGsXJEYZGwgtvmBMpZS6nxapp2s+TgL/kfppa8cf3T
x37RIkxLFQPZScS2gyeEd3GG1We/zGc4acQ9504dXvsliV9+j5OHq1jUAHYs
8WJqp3He85oit03sfU8WF7wnxXiHi8/mmgte4P44ecAfJy//VLHO4TzrTnVW
KtabrHLePMQ+3fzg++WYRwdaf3yNLyqbd6s/Yd+JLZVYi1e0Iqeri3ijcfnr
afNU4zX0bec6Ni7viXyr9sSpT47Z5Ybg7/IFVks8rs2hxKpMvFO5xHMqxGLl
1NDRavwt37OdasWs+tgAsQYX146bSybxuxlBin4DtxoqqmxtZMa3T59lmfLw
6r457hVf7OU0dr0sCospuihGinc5v4gozcb2jj2hFWW4V9Y77VCPIx9pog93
Ypcb7gyLEVynkAbFzWPJ0MH8dmKuYbR//wKuDA0JGyOW61zPnNfhQu/5xEg9
zui6lhW4jvmzvI5aYh1rwsRsA8sk4bndxJfN+QX+BhwTtiQXMNKM781UjMmJ
hysT2evEUYuDVS3bsKhE9dLTFFu1p8wUE/dNcl31xKeOlzQ0UZiKF+lsmLgr
j+mRTvygqS2DJhaO3mw+Yob/ABCBOh8=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$190736#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {214.48289912500002`, 214.48289912500002`}, 
     PlotRange -> {{214.3135, 248.19332500000002`}, {214.3135, 
      248.19332500000002`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {214.48289912500002`, 214.48289912500002`}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{214.3135, 248.19332500000002`}, {214.3135, 
      248.19332500000002`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.2`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.748052610561854*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"8858e614-451b-4bca-b042-efbea3c934ba"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"train", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "101"}]}], "]"}], "]"}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"train", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "100"}], ";;"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GradientBoostedTrees\>\"", ",", 
       RowBox[{"\"\<BoostingMethod\>\"", "\[Rule]", "\"\<Gradient\>\""}], ",", 
       RowBox[{"\"\<LeafSize\>\"", "\[Rule]", "20"}], ",", 
       RowBox[{"\"\<LeavesNumber\>\"", "\[Rule]", "50"}], ",", 
       RowBox[{"\"\<MaxDepth\>\"", "\[Rule]", "6"}], ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.748054463173817*^9, 
  3.7480544631758175`*^9}},ExpressionUUID->"a7e904f0-88c7-46ee-9dd8-\
0a45c72ccbb7"]
},
WindowSize->{1024, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>2.3 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (32-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 554, 11, 231, "Input",ExpressionUUID->"b6f65e15-2f9c-4a1b-a92e-b22010ed8944"],
Cell[1115, 33, 633, 17, 95, "Input",ExpressionUUID->"ed30a3dc-df4b-4068-82fa-b2253ded078d"],
Cell[1751, 52, 179, 3, 66, "Input",ExpressionUUID->"5b33e5de-d353-4942-bf97-2b836ef6533a"],
Cell[1933, 57, 547, 11, 143, "Input",ExpressionUUID->"d744c878-725b-422d-8dd8-7c53dcb3e39a"],
Cell[CellGroupData[{
Cell[2505, 72, 443, 12, 95, "Input",ExpressionUUID->"87c26d06-28b4-49e5-b540-6c88f769a579"],
Cell[2951, 86, 238, 5, 105, "Output",ExpressionUUID->"9d402791-0a2e-4ee2-bd4b-021a6ba55fec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3226, 96, 295, 7, 95, "Input",ExpressionUUID->"0e45fc1d-5644-4a99-9061-10f90ec87a9e"],
Cell[3524, 105, 234, 5, 105, "Output",ExpressionUUID->"bba70c8e-7506-4104-a676-3d77e0b643a2"]
}, Open  ]],
Cell[3773, 113, 216, 5, 66, InheritFromParent,ExpressionUUID->"41d85799-ffc5-4a3c-8c2e-d4066666f6c2"],
Cell[3992, 120, 645, 13, 276, "Input",ExpressionUUID->"d76ee4a0-fbd5-40ee-910e-0f35ccf84d3e"],
Cell[4640, 135, 981, 29, 141, "Input",ExpressionUUID->"b31f40de-4cdd-4b14-8961-8e9009b26be3"],
Cell[CellGroupData[{
Cell[5646, 168, 342, 8, 95, "Input",ExpressionUUID->"7196cb2f-b2f7-43f6-94c2-fee02199d8e6"],
Cell[5991, 178, 1449, 30, 254, "Output",ExpressionUUID->"f24834fe-c39e-42ab-af9c-3bdfc36ec8aa"]
}, Open  ]],
Cell[7455, 211, 461, 12, 95, "Input",ExpressionUUID->"54e9d7ec-4cbd-42c7-89b2-acfb58bfb496"],
Cell[7919, 225, 332, 8, 95, "Input",ExpressionUUID->"d887041e-99bf-4671-b7f8-4d32acfe53ba"],
Cell[8254, 235, 391, 10, 95, "Input",ExpressionUUID->"8841d0ca-0c35-4e56-982c-4bbe4d2ec30d"],
Cell[8648, 247, 411, 10, 95, "Input",ExpressionUUID->"34c450f4-e5a2-4535-a0af-267b39aee833"],
Cell[CellGroupData[{
Cell[9084, 261, 318, 8, 95, "Input",ExpressionUUID->"bd3ee033-fde1-46c0-b10c-50b48dee7972"],
Cell[9405, 271, 1532, 43, 176, "Output",ExpressionUUID->"6b174018-0b32-4871-a699-fa4d2e9d517a"]
}, Open  ]],
Cell[10952, 317, 314, 7, 95, "Input",ExpressionUUID->"8dfda203-7760-4fb7-b0d0-106d1262c82e"],
Cell[CellGroupData[{
Cell[11291, 328, 212, 4, 95, "Input",ExpressionUUID->"abb07c69-91ad-4873-aff8-b89896669a17"],
Cell[11506, 334, 180, 3, 105, "Output",ExpressionUUID->"0b99cd3a-1871-4771-a783-2aa05b91e71a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11723, 342, 812, 22, 231, "Input",ExpressionUUID->"9652d76c-d651-49b3-b4eb-543321b597e3"],
Cell[12538, 366, 123379, 2375, 251, "Output",ExpressionUUID->"eb1c1fd6-19f0-4679-af95-fb649811f0cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135954, 2746, 662, 19, 141, "Input",ExpressionUUID->"c72eed56-e07c-4b70-a869-ae02be6b580b"],
Cell[136619, 2767, 1644, 42, 500, "Output",ExpressionUUID->"042aba02-ed87-4e87-aa13-ec8fcadac369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138300, 2814, 380, 10, 95, "Input",ExpressionUUID->"6bf75b5a-e6ab-46a0-bedb-43277d1abf84"],
Cell[138683, 2826, 70213, 1332, 251, "Output",ExpressionUUID->"112f12d0-f6f7-4150-8931-2a85b9cf06e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208933, 4163, 298, 6, 95, "Input",ExpressionUUID->"abea313d-363f-402b-8222-7c158ea9497a"],
Cell[209234, 4171, 245, 4, 105, "Output",ExpressionUUID->"fb20de05-56cc-434d-a190-6d9c9ee197d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209516, 4180, 227, 4, 95, "Input",ExpressionUUID->"9150184f-6568-4a47-abb2-9add984473ab"],
Cell[209746, 4186, 19307, 411, 847, "Output",ExpressionUUID->"8858e614-451b-4bca-b042-efbea3c934ba"]
}, Open  ]],
Cell[229068, 4600, 949, 24, 292, "Input",ExpressionUUID->"a7e904f0-88c7-46ee-9dd8-0a45c72ccbb7"]
}
]
*)

